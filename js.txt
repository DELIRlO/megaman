class ElectricParticles {
    constructor() {
        this.canvas = document.createElement('canvas');
        this.ctx = this.canvas.getContext('2d');
        this.particles = [];
        this.animationId = null;
        this.isActive = false;
        
        this.setupCanvas();
        this.createParticles();
    }
    
    setupCanvas() {
        this.canvas.style.position = 'fixed';
        this.canvas.style.top = '0';
        this.canvas.style.left = '0';
        this.canvas.style.width = '100%';
        this.canvas.style.height = '100%';
        this.canvas.style.zIndex = '1';
        this.canvas.style.pointerEvents = 'none';
        
        document.getElementById('loading-system').appendChild(this.canvas);
        this.resizeCanvas();
        window.addEventListener('resize', this.resizeCanvas.bind(this));
    }
    
    resizeCanvas() {
        this.canvas.width = window.innerWidth;
        this.canvas.height = window.innerHeight;
    }
    
    createParticles() {
        const particleCount = Math.floor(window.innerWidth / 10);
        
        for (let i = 0; i < particleCount; i++) {
            this.particles.push({
                x: Math.random() * this.canvas.width,
                y: Math.random() * this.canvas.height,
                size: Math.random() * 3 + 1,
                speed: Math.random() * 0.5 + 0.1,
                opacity: Math.random() * 0.3 + 0.1,
                angle: Math.random() * Math.PI * 2
            });
        }
    }
    
    start() {
        this.isActive = true;
        this.animate();
    }
    
    animate() {
        if (!this.isActive) return;
        
        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
        
        this.ctx.fillStyle = 'rgba(0, 200, 255, 0.8)';
        
        this.particles.forEach(particle => {
            // Atualizar posição
            particle.x += Math.cos(particle.angle) * particle.speed;
            particle.y += Math.sin(particle.angle) * particle.speed;
            
            // Resetar partículas que saírem da tela
            if (particle.x < 0 || particle.x > this.canvas.width || 
                particle.y < 0 || particle.y > this.canvas.height) {
                particle.x = Math.random() * this.canvas.width;
                particle.y = Math.random() * this.canvas.height;
            }
            
            // Desenhar partícula
            this.ctx.globalAlpha = particle.opacity;
            this.ctx.beginPath();
            this.ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);
            this.ctx.fill();
        });
        
        this.animationId = requestAnimationFrame(() => this.animate());
    }
    
    stop() {
        this.isActive = false;
        cancelAnimationFrame(this.animationId);
        this.canvas.remove();
    }
}

// Sistema de Carregamento Principal
document.addEventListener('DOMContentLoaded', () => {
    const loadingSystem = document.getElementById('loading-system');
    const progressBar = document.getElementById('progress-indicator');
    const progressText = document.getElementById('progress-text');
    const mainContent = document.getElementById('main-content');
    
    // Iniciar partículas
    const particles = new ElectricParticles();
    particles.start();
    
    // Simular carregamento
    let progress = 0;
    const loadingInterval = setInterval(() => {
        progress += Math.random() * 10;
        if (progress > 100) progress = 100;
        
        progressBar.style.width = `${progress}%`;
        progressText.textContent = `${Math.floor(progress)}%`;
        
        if (progress === 100) {
            clearInterval(loadingInterval);
            
            // Finalizar carregamento
            setTimeout(() => {
                loadingSystem.style.opacity = '0';
                
                setTimeout(() => {
                    loadingSystem.style.display = 'none';
                    mainContent.style.display = 'block';
                    particles.stop();
                }, 500);
            }, 500);
        }
    }, 200);
});